jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "2G"
      CCACHE_HARDLINK: "true"
      KERNEL_DEFCONFIG: "a10s_defconfig"
      KERNEL_CMDLINE: "ARCH=arm64 CC=clang CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- O=out"

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'true'
        fetch-depth: 100

    - name: Set up ccache
      uses: hendrikmuhs/ccache-action@v1.2

    - name: Install dependencies
      run: |
        sudo apt-get update -y
        sudo apt install gcc-aarch64-linux-gnu -y
        sudo apt install gcc-arm-linux-gnueabi -y
        sudo apt install binutils make python3 libssl-dev build-essential bc bison flex unzip libssl-dev ca-certificates xz-utils mkbootimg cpio device-tree-compiler git git-lfs -y
        git clone https://github.com/kdrag0n/proton-clang --dept=1 -b master
        make clean
        make mrproper

    - name: GetTime
      id: get_time
      run: |
        echo "TIME=$(TZ=UTC-8 date +%m%d%H%M )" >> $GITHUB_OUTPUT

    - name: Build Kernel
      run: |
        if [[ ! -d gcc ]]; then
          git clone https://github.com/ruben1863/android_gcc_6.4.1_arm-eabi gcc
        fi
        mkdir -p out
        export CROSS_COMPILE=${PWD}/gcc/bin/arm-eabi-
        export USE_CCACHE=1
        export ARCH=arm
        export SUBARCH=arm
        export TARGET=out
        make O=$TARGET ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE maya_bsp_defconfig | tee -a Defconfig.log
        make O=$TARGET ARCH=$ARCH CROSS_COMPILE=$CROSS_COMPILE -j8 | tee -a Kernel.log
